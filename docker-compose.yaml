version: '3.8'

services:
  app:
    build: .
    tty: true
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    volumes:
      - .:/drf_7_cw
    depends_on:
      db:
        condition: service_healthy

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    depends_on:
      - db
      - redis
      - app
    env_file:
      - .env

  celery_beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO -S django
    depends_on:
      - db
      - redis
      - app
    env_file:
      - .env

  redis:
    image: redis:alpine
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:alpine
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pg_data:
