name: Build and Deploy

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Verify Python version
        run: python --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools
          pip install -r requirements.txt

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Copy files via SSH
        run: |
          rsync -avz --exclude 'pycache' --exclude '.git' -e 'ssh -o StrictHostKeyChecking=no' . ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/app/

      - name: SSH and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/app
            touch .env

            sed -i '/DB_NAME/d' .env
            sed -i '/DB_USER/d' .env
            sed -i '/DB_PASS/d' .env
            sed -i '/DJANGO_KEY/d' .env
            sed -i '/TELEGRAM_API_TOKEN/d' .env

            echo "DB_NAME=${DB_NAME}" >> .env
            echo "DB_USER=${DB_USER}" >> .env
            echo "DB_PASS=${DB_PASS}" >> .env
            echo "DJANGO_KEY=${DJANGO_KEY}" >> .env
            echo "TELEGRAM_API_TOKEN=${TELEGRAM_API_TOKEN}" >> .env

            export DOCKER_CLIENT_TIMEOUT=500
            export COMPOSE_HTTP_TIMEOUT=500

            docker-compose down
            docker-compose up --build -d

      - name: Cleanup
        if: always()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker system prune -a -f
