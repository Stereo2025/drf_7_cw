name: Build and Deploy

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy files via SSH
        run: |
          rsync -avz --exclude 'pycache' --exclude '.git' -e 'ssh -o StrictHostKeyChecking=no' . ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/app/

      - name: SSH and Deploy
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DJANGO_KEY: ${{ secrets.DJANGO_KEY }}
          TELEGRAM_API_TOKEN: ${{ secrets.TELEGRAM_API_TOKEN }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd ~/app
            echo "DB_NAME=${DB_NAME}" >> .env
            echo "DB_USER=${DB_USER}" >> .env
            echo "DB_PASS=${DB_PASS}" >> .env
            echo "DJANGO_KEY=${DJANGO_KEY}" >> .env
            echo "TELEGRAM_API_TOKEN=${TELEGRAM_API_TOKEN}" >> .env
            docker-compose down
            docker-compose up --build -d
          EOF

      - name: Cleanup
        if: always()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker system prune -a -f

